<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 设置命名空间，可以与不同表的同类型操作进行区分，使用时以“空间名称.id”的方式调用 -->
<mapper namespace="Member">
	<resultMap type="Member" id="MemberResultMap">
		<result property="mid" column="mid"/>
		<result property="name" column="name"/>
		<result property="age" column="age"/>
		<result property="birthday" column="birthday1"/>
		<result property="sex" column="sex"/>
		<result property="note" column="note"/>
	</resultMap>
	<!-- 定义增加数据的操作配置，同时指定参数类型 -->
	<insert id="doCreate" parameterType="Member">
		INSERT INTO member(
			mid,name,age,salary,birthday,sex,note) 
		VALUES (
			#{mid},#{name},#{age},#{salary},#{birthday},#{sex},#{note})
	</insert>
	<update id="doUpdate" parameterType="Member">
		UPDATE member SET 
			name=#{name} , age=#{age} , salary=#{salary} , birthday=#{birthday} ,
			sex=#{sex} , note=#{note}
		WHERE mid=#{mid}
	</update>
	<!-- 删除方法 如果传递的参数为一个值的话则参数名称可以任意命名 -->
	<delete id="doRemove" parameterType="java.lang.String">
		DELETE FROM member WHERE mid=#{mid} ;
	</delete>
	<!-- 查询全部 resultClass:表示的是当前查询结果的每一个条数据返回的对象类型，不是整个调用的方法返回的类型， 
		具体方法中返回的是一条数据还是多条数据，不是由resultClass决定的，是由调用的方法决定的 
		mybatis可以自动将查询的结果直接设置给同名的属性，如果vo当中的属性名与数据库当中的名称
		不一致的话需要定义别名 -->
	<select id="findAll" resultMap="MemberResultMap">
		SELECT mid,name,age,salary,birthday1,sex,note FROM member 
	</select>
	<select id="findById" parameterType="java.lang.String" resultType="Member">
		SELECT mid,name,age,salary,birthday,sex,note FROM member WHERE mid=#{mid}
	</select>
	<select id="findAllBySplit" parameterType="java.util.Map" resultType="Member">
		SELECT mid,name,age,salary,birthday,sex,note 
		FROM member 
		WHERE ${column} LIKE #{keyWord} LIMIT #{start} , #{lineSize}
	</select>
	<select id="getAllCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(mid) 
		FROM member 
		WHERE ${column} LIKE #{keyWord}
	</select>
</mapper>