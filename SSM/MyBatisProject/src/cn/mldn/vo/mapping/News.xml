<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 要求定义的是资源文件的名称空间，以后的访问要通过名称空间来定位，不能重复 -->
<mapper namespace="cn.mldn.vo.mapping.NewsNS">
	<cache eviction="FIFO" flushInterval="100000" size="512" readOnly="true"/>
	<resultMap type="News" id="NewsResultMap">
		<id column="nid" property="nid"/>
		<result column="title" property="title"/>
		<result column="pub_date" property="pubdate"/>
		<result column="content" property="content"/>
	</resultMap>
	<!-- 在此处定义新闻数据增加时所使用的SQL语句，ID为调用名称，与命名空间结合使用，不能够重复 -->
	<insert id="doCreate" parameterType="News" keyProperty="nid" useGeneratedKeys="true">
		<!-- 如果要在配置文件中使用属性，那么使用的结构“#{属性名称,相关配置}” -->
		INSERT INTO news(title,pub_date,content) VALUES (#{title},#{pubdate},#{content}) 
	</insert>
	<!-- 修改操作之中依然可以使用定义的别名 --> 
	<update id="doUpdate" parameterType="News">
		UPDATE news SET title=#{title},pub_date=#{pubdate},content=#{content} 
		WHERE nid=${nid}
	</update>
	<!-- 数据的删除操作，一般情况下都会按照id删除，如果是java.lang包中的类可以不写包 -->
	<delete id="doRemove" parameterType="java.lang.Integer">
		<!-- 在进行删除传递数据的时候，如果只有一个数据，那么名字就随便写了 -->
		DELETE FROM news WHERE nid=#{pid}
	</delete>
	<delete id="doRemoveByTitle" parameterType="String">
		DELETE FROM news WHERE title=#{pt}
	</delete>
	<!-- 根据新闻编号查询出新闻信息，参数的类型是Integer，返回的结果是News类 -->
	<select id="findById" parameterType="Integer" resultMap="NewsResultMap" useCache="false">
		SELECT nid,title,pub_date,content FROM news WHERE nid=#{pid}
	</select> 
	<select id="findAll" resultMap="NewsResultMap">
		SELECT nid,title,pub_date,content FROM news
	</select> 
	<select id="findAllSplit" resultMap="NewsResultMap" parameterType="java.util.Map">
		SELECT nid,title,pub_date,content 
		FROM news
		WHERE ${column} LIKE #{keyWord}
		LIMIT #{start} , #{lineSize}
	</select> 
	<select id="getAllCount" resultType="Integer" parameterType="java.util.Map">
		SELECT COUNT(*) FROM news
		WHERE ${column} LIKE #{keyWord}
	</select>
</mapper> 