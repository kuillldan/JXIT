package utils;

import java.lang.reflect.Method;

public class BeanOperator
{
	private Object rootObject;
	private String property;
	private Object value;

	private Object currentObject;
	private String lastFieldName;

	public BeanOperator(Object rootObject, String property, Object value)
	{
		super();
		this.rootObject = rootObject;
		this.property = property;
		this.value = value;
	}

	private void handleString() throws Exception
	{ 
		this.currentObject = this.rootObject;
		String[] propertiesInArray = property.split("\\.");
		for (int i = 0; i < propertiesInArray.length - 1; i++)
		{
			//this.currentObject.getClass().getDeclaredField(propertiesInArray[i]);
			Method getter = this.currentObject.getClass().getDeclaredMethod(propertiesInArray[i]);
			this.currentObject = getter.invoke(this.currentObject);
		}
		
		
	}
}