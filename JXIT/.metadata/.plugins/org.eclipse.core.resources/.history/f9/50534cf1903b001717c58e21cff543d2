package interceptors;

import java.lang.reflect.Field;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;
import org.eclipse.jdt.internal.compiler.ast.ThisReference;

import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;

@SuppressWarnings("serial")
public class DataValidationInterceptor extends AbstractInterceptor
{
	@Override
	public String intercept(ActionInvocation actionInvocation) throws Exception
	{
		ActionSupport action = (ActionSupport) actionInvocation.getAction();
		HttpServletRequest request = ServletActionContext.getRequest();
		Map<String, Object> parameters = actionInvocation.getInvocationContext().getParameters();
		String uri = request.getRequestURI();
		String requestMethodName = uri.substring(uri.lastIndexOf("!") + 1, uri.lastIndexOf("."));

		try
		{
			Field validationRuleField = action.getClass().getDeclaredField(requestMethodName + "Rule");
			validationRuleField.setAccessible(true);
			String validationRule = (String) validationRuleField.get(action);
			if(this.validateInternal(action , validationRule, parameters))
			{
				return actionInvocation.invoke();
			}
			else
			{
				return requestMethodName + "ValidationFailed";
			} 
		} catch (NoSuchFieldException e)
		{
			return actionInvocation.invoke();
		}
	}
	
	
	public boolean validateInternal(ActionSupport action, String validationRule,Map<String, Object> parameters)
	{
		String[] validationRuleInArray = validationRule.split("\\|");
		for(String eachValidationRule : validationRuleInArray)
		{
			String fieldName = eachValidationRule.split(":")[0];
			String fieldRealType = eachValidationRule.split(":")[1];
			
			Object parameterValueInObject = parameters.get(fieldName);
			if(parameterValueInObject == null)
			{
				action.addFieldError(fieldName, "未在请求中找到该字段信息");
				continue;
			}
			String[] parameterValueInStringArray = (String[])parameterValueInObject;
			if(parameterValueInStringArray.length <= 0)
			{
				action.addFieldError(fieldName, "该字段的值不能为空");
				continue;
			}
			 
		}
		return false;
	}
}
